<h2>Find Assignments by Contact:</h2>

<% form_for :conditions do |f| %>
  <%= conditions_html("conditions", ["contact"], Conditions, "force") %>
  <%= f.hidden_field :date_enabled, :value => true %>
  <%= f.hidden_field :date_start_date, :value =>  Date.today %>
  <%= f.hidden_field :date_end_date,  :value => Date.today + turbo_mode_days %>
  <%= f.submit "Find Contact's Shifts" %>
<% end %>

<h2>Find Available <%= params[:controller].humanize %>:</h2>

<%= do_jsalert %>

<span class="error">
<%= flash[:error] %><br />
</span>

<%= render :partial => 'assignments/add_links' %>

<% to_action = params[:action] %>

<div>
<h3>By Schedule</h3>
<% s = Sked.find(:all) %>

<% top_cat = "Front Desk Checkin" %>
<% main_l = s.select{|x| x.category_type.to_s.strip == top_cat} %>

<% master_conds = {:assigned_enabled => true, :assigned_excluded => true, :weekday_enabled => true, :weekday_id => [2, 3, 4, 5, 6], :date_enabled => true, :date_start_date => Date.today, :date_end_date => Date.today + turbo_mode_days} %>

<% if main_l.length > 0 %>
<h4>Schedules for Front Desk</h4>
<% main_l.each do |x| %>
<%= link_to x.name, {:action => to_action, :conditions => master_conds.merge({:sked_enabled => "true", :sked_id => x.id})} %> (Rosters included: <%= x.rosters_s %>)<br />
<% end %>
<% end %>
<h4>Other Schedule Links</h4>
<% c_last = "" %>
<% if sand = Sked.find_by_name("Sandbox") %>
<% conds = master_conds.merge({:sked_enabled => "true", :sked_id => sand.id, :sked_excluded => "sked_excluded"}) %>
<% else %>
<% conds = master_conds.merge({:empty_enabled => "true"} )%>
<% end %>
<%= link_to "ALL", {:action => to_action, :conditions => conds} %><br />
<% s.select{|x| x.category_type.to_s.strip.length == 0 }.each do |x| %>
<%= link_to x.name, {:action => to_action, :conditions => {:sked_enabled => "true", :sked_id => x.id}} %> (Rosters included: <%= x.rosters_s %>)<br />
<% end %>
<% s.select{|x| x.category_type.to_s.strip.length >0 && x.category_type.to_s.strip != top_cat}.sort{|x,y| q = (y.category_type || "") <=> (x.category_type || ""); q == 0 ? x.name <=> y.name: q}.each do |x| %>
<% c_this = x.category_type.to_s %>
<% if c_this != c_last %>
<h4>Schedules By <%= c_last = c_this%></h4>
<% end %>
<%= link_to x.name, {:action => to_action, :conditions => master_conds.merge({:sked_enabled => "true", :sked_id => x.id})} %> (Rosters included: <%= x.rosters_s %>)<br />
<% end %>
</div>

<div>
<h3>By Roster</h3>
<% Roster.enabled.sort_by(&:name).each do |x| %>
<%= link_to x.name, {:action => to_action, :conditions => master_conds.merge({:roster_enabled => "true", :roster_id => x.id})} %><br />
<% end %>
</div>
