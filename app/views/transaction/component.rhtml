<% if @show_wrapper %>
<div id="<%= @transaction_type %>">
  <div id="<%= component_id(params) %>">
<% end %>
  <div class="header">
    <h2><%= Inflector.titleize(@transaction_type) %></h2>
    <div class="actions">
      <% new_params = params.merge(:controller => base_controller, :action => 'new', :transaction_type => @transaction_type) %>
      <%= loading_indicator_tag("new_#{@transaction_type}_loading") %>
    </div>
  </div>
      <div class="messages-container">
        <div id="<%= messages_id(params) %>">
          <%= render :partial => 'messages' %>
        </div>
        <p id="<%= empty_message_id(params) %>" class="empty-message" <%= " style=\"display:none;\" " if !@transactions.empty? %>>
          No Entries
        </p>
      </div>
  <div id="<%= form_tbody_id(params) %>"></div>
  <hr />
  <table class="list">
    <tbody>
      <%= render :partial => 'column_headings' %>
    </tbody>
    <tbody id="<%= tbody_id(params) %>">
      <tr></tr>
      <% if !@transactions.empty? %>
        <%= render :partial => @transaction_type, :collection => @transactions, :locals => { :hidden => false } %>
      <% end %>
    </tbody>
  </table>

<div class="footer">
  <td class="indicator-container">
    <%= loading_indicator_tag("#{@transaction_type}_footer_loading") %>
  </td>

  <%= will_paginate @transactions, :remote_options => {
        :method => :get,
        :update => component_id(params),
        :loading => "Element.show('#{loading_indicator_id("#{@transaction_type}_footer_loading")}');",
      },
      :params => {
        :conditions => params[:conditions],
      }
   %>
</div>
<div class="list_refinement">
  <% refine_params = params.merge({:action => 'component_update', :transaction_type => @transaction_type }) %>
  <% form_remote_tag :url => { :action => 'component_update' },
        :loading => "$('#{loading_indicator_id( "refine_#{@transaction_type}_loading" )}').show()",
        :update => component_id( refine_params ) do %>
    <% filters = {} %>
    <% filters['date_range'] = date_or_date_range_picker('conditions') %>
    <% if @model.new.respond_to?( :contact_id ) %>
      <% filters['contact'] =
           contact_field('@conditions', 'contact_id',
             :locals => {:options =>
               {
                 :object_name => 'conditions',
                 :field_name => 'contact_id',
                 :element_prefix => 'filter_contact',
                 :display_edit => false,
                 :display_create => false,
                 :show_label => false,
               },
               :contact => @conditions.contact
             } ) %>
    <% end %>
    <% if @model.new.respond_to?( :payments ) %>
      <% filters['payment_method'] = render( :partial => 'payment_method_select',
            :locals => {:field_id_prefix => 'conditions',
                        :field_name_prefix => 'conditions',
                        :show_label => false,
                        :paid_object => @conditions} ) %>
      <% filters['unresolved_invoices'] = "" %>
    <% end %>
    <% filters['transaction_id'] = text_field('conditions', 'transaction_id') %>
    <% filters['needs_attention'] = "" %>
    <%= multiselect_of_form_elements('conditions', filters ) %>

    <div class="form-footer">
      <%= submit_tag "Refine", :class => "submit" %>
      <%= loading_indicator_tag("refine_#{@transaction_type}_loading") %>
    </div>
  <% end %>
</div>
<% if @show_wrapper %>
</div>
</div>
<% end %>
<%= javascript_tag(
      "Element.show($('#{loading_indicator_id("new_#{@transaction_type}_loading")}'));" +
      remote_function( :url => new_params )
    ) %>
