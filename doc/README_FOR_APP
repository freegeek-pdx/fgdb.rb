= _F_ree_G_eek _D_ata_B_ase in _R_u_B_y

=================
HEY! LOOK HERE!!!
=================

This file is outdated. We use git now.

== How stuff works

this webapp is meant to keep track of two main areas:
* volunteers and the time they work
* gizmos and their flow through our organization

in the near future i hope to add:
* classes and who has completed them
* projects (such as building and testing a computer) and who has worked on them

== Install

we made this on debian lenny systems. alteration may be needed on other distros.

To get the mr setup:

 $> apt-get install subversion mr # or, wget http://git.kitenet.net/?p=mr.git;a=blob_plain;f=mr -O /usr/local/bin/mr
 $> svn co http://dev.freegeek.org/svn/fgdb.rb/trunk/mr/ fgdb.rb
 $> cd fgdb.rb

If you are going to be doing development, you should use the latest (untested, unreleased, and possibly unusable) trunk:
 $> touch devel

Checkout the sources (you first need to setup mr, see above):
 $> mr -c config update

to setup a working environment on debian and ubuntu (skip this part on other distros):

 Add my repo (required to install thin) to your sources.list:
 $> (wget http://packages.ryan52.info/keyring.gpg && apt-key add keyring.gpg); rm -f keyring.gpg
 $> echo "deb http://repos.ryan52.info/thin/ sid main" >> /etc/apt/sources.list.d/ryan52.list

 Install stuff:
 $> apt-get update
 $> apt-get install ruby postgresql-8.1 libpgsql-ruby irb libxml-ruby xmlstarlet thin
 $> apt-get install rails #version 2.1
 $> ln -s /usr/share/rails vendor/rails

check if things are installed, and find out what you need to install:

 $> ./script/do_i_have_everything_installed_right

you need to create and configure the databases:

 $> su - postgres -c 'createuser -P SOMEDBUSER'
      # capable of creating databases, but nothing else
 $> createdb -h localhost -U SOMEDBUSER fgdb_production
 $> createdb -h localhost -U SOMEDBUSER fgdb_test
 $> createdb -h localhost -U SOMEDBUSER fgdb_development
 $> cd fgdb.rb/current
   ::: edit config/database.yml-example to match and rename
   ::: it (drop '-example')
 $> export RAILS_ENV=production
 $> rake db:schema:load

choose one of the following: skeletal metadata (for production databases), or full test data (for development databases):

 $> rake db:metadata:load
 $> ./script/make_admin # create the admin user (should only be used to create a contact for yourself, and turn yourself into an admin)
   :OR:
 $> wget http://dev.freegeek.org/~ryan52/devel_data.sql.gz -O db/devel_data.sql.gz && ./script/load_devel_data # the admin user's password is 'secret'

migrate the database:

 $> rake db:migrate

run some tests to see if things look okay:

 $> rake db:test:purge
 $> rake

if you see any failures or errors,
something is wrong that you should fix or tell us about.
then start the server and browse in to see things working:

 $> thin &
 $> iceweasel http://localhost:3000

for a production server running nginx and thin,
continue with the following:

 $> apt-get install nginx
 $> ln -fs $(readlink -f doc/examples/web/fgdb.conf) /etc/nginx/sites-enabled/fgdb.conf
 $> ln -fs $(readlink -f doc/examples/web/fgdb.yml) /etc/thin/
 $> rm /etc/nginx/sites-enabled/default
 $> chown -R www-data:www-data tmp log public
 $> invoke-rc.d nginx restart
 $> invoke-rc.d thin restart
   ::: modify configs to taste :::
   ::: edit config/environment.rb to say "ENV['RAILS_ENV'] ||= 'production'" :::

== Upgrading to newest sprint

To upgrade to the newest sprint release:
 $> mv current/public/_release.html current/public/release.html
 $> invoke-rc.d thin stop
 $> mr -c config update
 $> cd current
 $> RAILS_ENV=production rake db:migrate
 $> invoke-rc.d thin start
 $> mv public/release.html public/_release.html

== THANKS

in chronological order of svn commits:

* Martin Chase <mchase@freegeek.org>
* Jeff Schwaber
* Gordon Pederson
* Richard Seymour <rfs@freegeek.org>
* Tim Bauman
* Eric Davis
* Lantz Moore
* Ryan Niebur <RyanRyan52@gmail.com>
